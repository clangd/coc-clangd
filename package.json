{
  "name": "coc-clangd",
  "version": "0.22.0",
  "description": "clangd extension for coc.nvim",
  "author": "Heyward Fann <fannheyward@gmail.com>",
  "license": "Apache-2.0 WITH LLVM-exception",
  "main": "lib/index.js",
  "keywords": [
    "coc.nvim"
  ],
  "engines": {
    "coc": "^0.0.80"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/clangd/coc-clangd.git"
  },
  "scripts": {
    "clean": "rimraf lib",
    "build": "node esbuild.js",
    "watch": "node esbuild.js --watch",
    "lint": "eslint src --ext ts",
    "prepare": "node esbuild.js"
  },
  "devDependencies": {
    "@clangd/install": "^0.1.4",
    "@types/node": "12.20.54",
    "@types/which": "^2.0.0",
    "@typescript-eslint/eslint-plugin": "^5.0.0",
    "@typescript-eslint/parser": "^5.0.0",
    "coc.nvim": "^0.0.81-next.15",
    "esbuild": "^0.14.2",
    "eslint": "^8.0.1",
    "fs-jetpack": "^4.3.1",
    "rimraf": "^3.0.1",
    "typescript": "^4.4.3",
    "vscode-languageserver-protocol": "^3.16.0"
  },
  "activationEvents": [
    "onLanguage:c",
    "onLanguage:cpp",
    "onLanguage:cuda",
    "onLanguage:objc",
    "onLanguage:objcpp",
    "onLanguage:opencl",
    "onLanguage:objective-c",
    "onLanguage:objective-cpp",
    "workspaceContains:**/compile_commands.json",
    "workspaceContains:**/compile_flags.txt"
  ],
  "rootPatterns": [
    {
      "patterns": [
        "compile_commands.json",
        "compile_flags.txt"
      ]
    }
  ],
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "coc-clangd configuration",
      "properties": {
        "clangd.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable coc-clangd extension"
        },
        "clangd.disableDiagnostics": {
          "type": "boolean",
          "default": false,
          "description": "Disable diagnostics from clangd"
        },
        "clangd.disableCompletion": {
          "type": "boolean",
          "default": false,
          "description": "Disable completion source from clangd"
        },
        "clangd.disableSnippetCompletion": {
          "type": "boolean",
          "default": false,
          "description": "Disable completion snippet from clangd"
        },
        "clangd.disableProgressNotifications": {
          "type": "boolean",
          "default": false,
          "description": "Disable indexing progress notifications from clangd"
        },
        "clangd.compilationDatabasePath": {
          "type": "string",
          "default": "",
          "description": "Specifies the directory containing the compilation database"
        },
        "clangd.compilationDatabaseCandidates": {
          "type": "array",
          "default": [],
          "description": "Specifies the directories that may contain a compilation database"
        },
        "clangd.path": {
          "type": "string",
          "default": "",
          "description": "The path to clangd executable, e.g.: /usr/bin/clangd"
        },
        "clangd.arguments": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "Arguments for clangd server"
        },
        "clangd.trace.file": {
          "type": "string",
          "default": "",
          "description": "Names a file that clangd should log a performance trace to, in chrome trace-viewer JSON format."
        },
        "clangd.trace.server": {
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "Trace requests to clangd"
        },
        "clangd.inlayHints.enable": {
          "type": "boolean",
          "default": true,
          "description": "Enable inlay hints"
        },
        "clangd.inlayHints.sep": {
          "type": "string",
          "default": "â€£",
          "description": "Separator text for typeHints in virtual text"
        },
        "clangd.fallbackFlags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Extra clang flags used to parse files when no compilation database is found."
        },
        "clangd.showDBChangedNotification": {
          "type": "boolean",
          "default": true,
          "description": "Show notifications while DB files changed"
        },
        "clangd.checkUpdates": {
          "type": "boolean",
          "default": false,
          "description": "Check for clangd language server updates on startup."
        },
        "suggest.detailMaxLength": {
          "type": "number",
          "description": "Max length of detail that should be shown in popup menu.",
          "default": 50
        },
        "diagnostic.format": {
          "type": "string",
          "description": "Define the diagnostic format. Available parts: source, code, severity, message",
          "default": "%message\n[%source:%code]"
        }
      }
    },
    "commands": [
      {
        "command": "clangd.ast",
        "title": "Show AST"
      },
      {
        "command": "clangd.switchSourceHeader",
        "title": "Switch between source/header"
      },
      {
        "command": "clangd.symbolInfo",
        "title": "Resolve symbol info under the cursor"
      },
      {
        "command": "clangd.memoryUsage",
        "title": "Show memory usage"
      },
      {
        "command": "clangd.inlayHints.toggle",
        "title": "Toggle inlay hints"
      },
      {
        "command": "clangd.projectConfig",
        "title": "Open project configuration file"
      },
      {
        "command": "clangd.userConfig",
        "title": "Open user configuration file"
      },
      {
        "command": "clangd.install",
        "title": "Install latest clangd language server binary release"
      },
      {
        "command": "clangd.update",
        "title": "Check for updates to clangd language server"
      }
    ]
  }
}
